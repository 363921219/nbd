Starting with nbd-client 1:2.9.9-3, there's support for running root on
an NBD filesystem. There's only support for initramfs for now. If you
need something else, patches are welcome.

To boot the system, add the kernel command line parameter
"nbdroot=X.X.X.X,Y", with "X.X.X.X" being the IP address of the server,
and "Y" the port on which the server is running. You should also specify
a "root=" parameter that points to the NBD device. This may be a
partitioned NBD device, but that is not a requirement.

Starting with nbd-client 1:2.9.11-4, you can also add a third argument
to the nbdroot parameter, to specify which NBD device to set up in case
you're running off RAID-on-NBD or LVM-on-NBD, or something similar. If
you do not specify the third argument, then your root= parameter must
still contain the /dev/nbdX device node that you're trying to boot off
of. The format then becomes "nbdroot=X.X.X.X,Y,nbdZ"

Alternatively, you may specify 'nbdroot=dhcp'. In that case, you should
specify what would go into the nbdroot variable through the root-path
variable in DHCP, for example (with ISC DHCP):

option root-path "X.X.X.X,Y,nbdZ";

If the port name contains any non-digit characters, the script will
assume that it is a name-based export and add the -N parameter, as is
required for doing so.

You will want to set "KILLALL=false" in /etc/nbd-client; this to prevent
the initscript from yanking the root filesystem from under your nose
during shutdown or upgrade of the nbd package.

DO NOT add configuration for the root filesystem to /etc/nbd-server.
The initramfs will set it up, and the initscript should not know about
it (otherwise the above KILLALL configuration has no effect).

DO keep the initscript running; it will detect that you're running off
an NBD device and add the nbd-client PID number to
/lib/init/rw/sendsigs.omit.d, to prevent init from killing nbd-client
prematurely at shutdown.
