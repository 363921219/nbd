#! /bin/bash
# postinst script for nbd
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

# Quotes each argument for shell expression inclusion, to prevent
# interpretation of special characters.
function shell_quote () {
       local first=true
       while [ "$#" -gt 0 ]; do
               if [ ! "$first" ]; then
                       echo -n ' '
               fi
               # sed expression transforms instances of ' to '\''
               echo -n "'$(echo "$1" | sed -e "s/'/'\\\\''/g")'"
               first=
               shift
       done
}

# Convert an old-style configuration file to a new-style one
function convert_config () {
	[ -f /etc/nbd-server.oldconf ] && . /etc/nbd-server.oldconf
	[ -f /etc/nbd-server ] && . /etc/nbd-server
	TMPFILE=$(mktemp /tmp/nbd-server.XXXXXX)
	if [ "$AUTO_GEN" = "n" ]
	then
		db_input critical nbd-server/autogen
		db_go
		exit 1
	fi
	cat /usr/share/nbd-server/nbd-server.conf.tmpl > $TMPFILE
	while [ ! -z ${NBD_FILE[$i]} ]
	do
		nbd-server -o "export-$i" ${NBD_PORT[$i]} ${NBD_FILE[$i]} ${NBD_SERVER_OPTS[$i]} >> $TMPFILE
		i=$(( $i + 1 ))
	done
}

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)
	if [ -f /etc/nbd-server -o -f /etc/nbd-server.oldconf ]
	then
	    db_get nbd-server/convert
	    if [ "$RET" = "true" ]
	    then
	        convert_config;
		exit 0;
	    fi
	fi
	db_get nbd-server/number
	NUMBER=${RET:-0}
	if [ "$NUMBER" -gt 0 ]
	then
	    TMPFILE=`mktemp /tmp/nbd-server.XXXXXX`
	    cat /usr/share/nbd-server/nbd-server.conf.tmpl > $TMPFILE
	    for i in $(seq 0 $(( $NUMBER - 1 )) )
	    do
	      # stay downward compatible
	      if [ "$i" -eq 0 ]
	      then
	          unset i
	      fi
	      db_get nbd-server/port$i
	      PORT=$RET
	      db_get nbd-server/filename$i
	      FN=$RET
	      umask 066
	      (   echo "[export$i]"
		  echo "	exportname = $FN"
		  echo "	port = $PORT"
	      ) >> $TMPFILE
	    done
	    ucf $TMPFILE /etc/nbd-server/config
	fi
	adduser --system --group --home /etc/nbd-server --no-create-home nbd
	;;
    
    abort-upgrade|abort-remove|abort-deconfigure)
        
        ;;
    
    *)
        echo "postinst called with unknown argument \`$1'">&2
        exit 0
        ;;
esac

db_stop

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
