* Can we do language bindings using #!'s?
  You would enter:
    nbdkit foo [args]
  where nbdkit-foo-plugin is a Perl script starting:
    #!perl
  which causes nbdkit to load the perl plugin wrapper.

* syslog? journal?

* An easy way to run nbdkit captive under libguestfs.

* Glance and/or cinder plugins.

* Performance - measure and improve it.

* Implement the new protocol and export names.  With export names it
  should be possible to have multiple plugins on the command line
  (each responding to a different export of course):

    nbdkit --export /foo plugin.so --export /bar another-plugin.so

  Note it should also be possible to either elect one plugin as the
  default that accepts all exportnames, or to divide the export name
  "space" up using regexps or wildcards.

* Implement true parallel request handling.  Currently
  NBDKIT_THREAD_MODEL_SERIALIZE_REQUESTS and
  NBDKIT_THREAD_MODEL_PARALLEL are the same, because we handle
  requests within each connection synchronously one at a time.  We
  could (and should) be able to handle them in parallel by having
  another thread pool for requests.
